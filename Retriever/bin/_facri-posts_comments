function getComments() {
  local user=$1
  cd ${FACRI_OUTPUT}/friends/$user/feeds
  # posts_ids with non-zero comments
  if [ -z "$(ls posts*json 2>/dev/null)" ]; then
    echo -e "\t$user's posts comments: no posts data found, unable to get comments"
    return
  fi
  [ -f .comments ] && [ "${FACRI_COMMENTS_RETRY}" == "false" ] && echo -e "\tskip comments grab, agreeing configuration." && return
  local posts_ids=$(cat posts*.json | jq '.posts[] | select((.comment_info | .comment_count != "0") or (.likes | .count !="0") or (.share_count!="0")) | .post_id')
  #   echo posts_ids $posts_ids
  local tot_post_ids=$(echo $posts_ids | wc -w)
  echo -e -n "\t$user's posts comments found: ${tot_post_ids}"
  if [ ${tot_post_ids} -eq 0 ]; then
    echo " , go further"
  else
    echo ", grab comments:"
  #   echo $tot_post_ids posts
    echo -n -e "\t\t"
    for post_id in ${posts_ids}; do
      local post_id=$(echo $post_id | cut -d"_" -f2 | sed 's/"//g')
      echo -n "$post_id"
      if [ -f "${post_id}_comments.json" ]; then
	echo "existant, skip." 
	continue
      fi
      local s=$($FBCMD PCOMMENTS $post_id 150) &
#       local pid=$!
#       wait $pid
#       local s=$?
#       [ $s -eq 0 ] && echo "ok." || echo "empty."
      echo -n " "
    done
    echo
  fi
  touch .comments
}