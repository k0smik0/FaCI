#!/bin/bash

[ -f etc/facri.conf ] && source etc/facri.conf

source bin/_facri-me

me_id=$(getMe)

user_friends_ids_file="his_friends_ids_from_posts_on_his_wall.txt"

fof_base_dir=$PWD

function getFriendsOfFriendsIds() {

  echo "retrieve friends of friends ids from their posts"
  
  local friends_dirs_parent="output/${me_id}_corpus/friends"
  local friends_dirs=$(find $friends_dirs_parent/* -maxdepth 0 -type d)
  
  local posts_files="feeds/posts*.json"
  
  local users_tot=$(echo ${friends_dirs} | xargs -n1 | wc -l)
#   echo tot $users_tot


  local i=0
  local m=$( echo "scale=2; 100 / $users_tot" | bc )
#   echo m $m
  for d in $friends_dirs; do
    cd $d
    i=$((i+1))

    local user_id=$(echo $d | cut -d"/" -f4)

    local mutual_friends=$(cat mutual_friends.txt |awk '{print $NF}' | grep -v UID)

    local mutual_friends_or_matcher=$(echo ${mutual_friends} | sed 's/ /\\|/g')

    local posts_actor_ids
    local friends_ids
    if [ ! -z "$(ls ${posts_files} 2>/dev/null)" ]; then
      posts_actor_ids=$(jq '.posts[].actor_id' ${posts_files} | sed 's/"//g' | uniq | grep -v $user_id)
      
      # only friends can post on wall, so write on file, after mutual_friends has been removed
      friends_ids=$(echo $posts_actor_ids | sed "s/${me_id}//g") 
      if [ ! -z ${mutual_friends_or_matcher} ]; then friends_ids=$(echo $posts_actor_ids | sed "s/${mutual_friends_or_matcher}//g") ; fi
      
    fi

    local comments_actor_ids
    if [ ! -z "$(ls feeds/*comments.json 2>/dev/null)" ]; then
      comments_actor_ids=$(jq '.comments.comment_data[].fromid' feeds/*comments.json | uniq | grep -v $user_id | sed 's/"//g' | xargs -n1 | sort -u | xargs)

      friends_ids=$(echo $friends_ids $comments_actor_ids |uniq | sed "s/${me_id}//g" | sed 's/"//g' | xargs -n1 | sort -u | xargs)
    fi
    
    if [ ! -z "${friends_ids}" ]; then
      echo $friends_ids > $user_friends_ids_file
    fi
    
    if [ "$(echo "scale=0; ${i} % 17" | bc)" -eq 0 ]; then
      echo -n "$( echo "scale=1; ${i}*${m}" | bc )%... "
    fi

    cd $fof_base_dir
  done
  echo "100%."
}

function getFriendsOfFriendsIdsBasicInfos() {
  echo "get friends of friends basic infos:"
  local friends_dirs_parent="output/${me_id}_corpus"
  
  local out_file="${friends_dirs_parent}/friends_of_friends.txt"
  
  echo -n "5%... "
  local oflist=$(cat $(find ${friends_dirs_parent} -iname $user_friends_ids_file) | xargs -n1 | sort -u | grep -v $me_id| xargs)
  echo -n "15%... "
  
  local oflist_file=/tmp/oflist.txt
  echo $oflist | xargs -n1 > $oflist_file
  
  # 2479 is maximum limit per-request
  local limit=2479
  local tot=$(cat $oflist_file | wc -l)
  local multiply=$(echo "scale=0; $tot / $limit" | bc);
  local rest=$(echo "scale=0; $tot % $limit" | bc);
  local start
  local end
  local ids
  echo "" > $out_file
  for i in $(seq 1 $multiply); do 
    start=$(expr $(expr $i - 1) \* $limit + 1); 
    end=$(expr $i \* $limit);
    ids=$(echo $(sed -n "${start},${end}p" $oflist_file) | sed 's/ /,/g')
#     echo ${ids} | sed 's/,/ /g ' | xargs -n1 | wc -l
    $FBCMD OINFO ${ids} >> $out_file
    echo -n "$(( $i*99/$multiply ))%... "
  done
  if [ ${rest} -ne 0 ]; then
    start=$(expr $(expr $tot - $rest) + 1);
    ids=$(echo $(sed -n "${start},${tot}p" $oflist_file) | sed 's/ /,/g')
#     echo ${ids} | sed 's/,/ /g ' | xargs -n1 | wc -l
    $FBCMD OINFO ${ids} >> $out_file
    echo -n "100%."
  fi
  
  echo "(missing $(expr tot - $(wc -l $out_file)) users)"
  
  cat $out_file | awk -F"," '{print $1}' | grep -v UID | grep -v "^$"  > ${friends_dirs_parent}/friends_of_friends_-_ids.txt
}


function getFriendsOfFriendsMutualFriends() {
# pwd
  echo "get friends of friends mutual friends:"
  
  local root_dir="output/${me_id}_corpus"
  local ids_file="${root_dir}/friends_of_friends_-_ids.txt"
  
  local friends_of_friends_ids=$(cat $ids_file| grep -v ID | sort -u)
  
  local users_tot=$(cat $ids_file| grep -v ID | wc -l)
  
  local fof_dir="${root_dir}/friends_of_friends"
  [ -d ${fof_dir} ] || mkdir ${fof_dir}
  
  local base_dir=$PWD
  
  local mod=$( echo "scale=0; ${users_tot} / 20" | bc )
  local multiply=$( echo "scale=3; 100 / $users_tot" | bc )
  local i=0
  local pr
  cd ${fof_dir}
  for d in ${friends_of_friends_ids}; do
    local output_file="${d}_-_mutual_friends.txt"
    [ ! -f $output_file ] && \
      $FBCMD OMUTUAL ${d} > $output_file
    i=$((i+1))
    if [ $(echo "scale=0; ${i} % $mod" | bc) -eq 0 ]; then 
      echo -n $( printf %.$6f $(echo "scale=4; $i*$multiply"|bc) )"%... "
    fi
  done
  cd $base_dir
  echo -n "100%."
}
